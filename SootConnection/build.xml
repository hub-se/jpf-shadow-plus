<?xml version="1.0" ?>

<!--
  build.xml - generic JPF extension build script
              using Ant (http://jakarta.apache.org/ant)
  public targets:

    compile           compile JPF and its specific (modeled) environment libraries
    test              run all JPF tests
    jar               build JPF jar files
    dist              build binary distribution
    clean             remove the files that have been generated by the build process
-->

<project name="SootConnection" default="build" basedir=".">

  <!-- ========================== COMMON SECTION ========================== -->

  <!-- compiler settings -->
  <property name="src_level"     value="8"/>
  <property name="debug"         value="on"/>
  <property name="deprecation"   value="on"/>


  <!-- generic classpath settings -->
  <path id="lib.path">

    <!-- our own classes and libs come first -->
    <pathelement location="build/"/>

    <fileset dir=".">
        <include name="lib/*.jar"/>
    </fileset>

  </path>

  <!-- init: common initialization -->
  <target name="-init">
    <tstamp/>

    <mkdir dir="build"/>               <!-- the build root -->

    <!-- the things that have to be in the classpath of whatever runs Ant -->
    <available property="have_javac" classname="com.sun.tools.javac.Main"/>
    <fail unless="have_javac">no javac found</fail>

  </target>


  <!-- ======================= COMPILE SECTION ============================= -->

  <!-- public compile -->
  <target name="compile" depends="-init"
          description="compile all JPF core sources" >
    <javac srcdir="src/" destdir="build/" includeantruntime="false"
           debug="${debug}" source="${src_level}" deprecation="${deprecation}"
           classpathref="lib.path"/>
  </target>

  <!-- ======================= MISC SECTION ================================ -->

  <!-- build jars -->
  <target name="build" depends="compile"
        description="generate the ${ant.project.name} jar files" >
  	<jar jarfile="build/${ant.project.name}.jar" whenmanifestonly="skip">
  	      <fileset dir="build/" erroronmissingdir="false"/>
  	    </jar>
  </target>

  <!-- public clean: cleanup from previous tasks/builds -->
  <target name="clean">
    <delete dir="build" />
    <delete>
      <fileset dir="." includes="**/*~" defaultexcludes="no" />
      <fileset dir="." includes="**/*.bak" defaultexcludes="no" />
      <fileset dir="." includes="**/error.xml" />
    </delete>
  </target>


</project>
